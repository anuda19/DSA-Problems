1. Write code for creating a new sorted array from two sorted arrays in O(n+m) time complexity where n,m are the size of the unsorted arrays.



function sortedMerge(a, b, res, n, m)
{

a.sort((a,b) => a-b);
b.sort((a,b) => a-b);


let i = 0, j = 0, k = 0;
while (i < n && j < m) {
if (a[i] <= b[j]) {
res[k] = a[i];
i += 1;
k += 1;
} else {
res[k] = b[j];
j += 1;
k += 1;
}
}   
while (i < n) { 
   
res[k] = a[i];
i += 1;
k += 1;
}   
while (j < m) { 
res[k] = b[j];
j += 1;
k += 1;
}
}



let a = [ 10, 5, 15 ];
let b = [ 20, 3, 2, 12 ];
let n = a.length;
let m = b.length;


let res = new Array(n + m);

sortedMerge(a, b, res, n, m);

console.log("Sorted merge list :");
for (let i = 0; i < n + m; i++)
console.log(" " + res[i]);


===================================================================================================================================================================================


2. Write code for finding the smallest element in an array.



var arr1 = [1, 2, 3, 4, 5, 6, 7, 8];
    var arr2 = [5,9,5,7];
var smallest = arr1[0];

for(var i=1; i<arr1.length; i++){
    if(arr1[i] < smallest){
        smallest = arr1[i];   
    }
}

console.log(smallest);


